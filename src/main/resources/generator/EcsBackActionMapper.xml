<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzx.generator.dao.EcsBackActionMapper">
  <resultMap id="BaseResultMap" type="com.lzx.generator.model.EcsBackAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="action_id" jdbcType="INTEGER" property="actionId" />
    <result column="back_id" jdbcType="INTEGER" property="backId" />
    <result column="action_user" jdbcType="VARCHAR" property="actionUser" />
    <result column="status_back" jdbcType="BIT" property="statusBack" />
    <result column="status_refund" jdbcType="BIT" property="statusRefund" />
    <result column="action_note" jdbcType="VARCHAR" property="actionNote" />
    <result column="log_time" jdbcType="INTEGER" property="logTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    action_id, back_id, action_user, status_back, status_refund, action_note, log_time
  </sql>
  <select id="selectByExample" parameterType="com.lzx.generator.model.EcsBackActionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ecs_back_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ecs_back_action
    where action_id = #{actionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_back_action
    where action_id = #{actionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzx.generator.model.EcsBackActionExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_back_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzx.generator.model.EcsBackAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ecs_back_action (action_id, back_id, action_user, 
      status_back, status_refund, action_note, 
      log_time)
    values (#{actionId,jdbcType=INTEGER}, #{backId,jdbcType=INTEGER}, #{actionUser,jdbcType=VARCHAR}, 
      #{statusBack,jdbcType=BIT}, #{statusRefund,jdbcType=BIT}, #{actionNote,jdbcType=VARCHAR}, 
      #{logTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lzx.generator.model.EcsBackAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ecs_back_action
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actionId != null">
        action_id,
      </if>
      <if test="backId != null">
        back_id,
      </if>
      <if test="actionUser != null">
        action_user,
      </if>
      <if test="statusBack != null">
        status_back,
      </if>
      <if test="statusRefund != null">
        status_refund,
      </if>
      <if test="actionNote != null">
        action_note,
      </if>
      <if test="logTime != null">
        log_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actionId != null">
        #{actionId,jdbcType=INTEGER},
      </if>
      <if test="backId != null">
        #{backId,jdbcType=INTEGER},
      </if>
      <if test="actionUser != null">
        #{actionUser,jdbcType=VARCHAR},
      </if>
      <if test="statusBack != null">
        #{statusBack,jdbcType=BIT},
      </if>
      <if test="statusRefund != null">
        #{statusRefund,jdbcType=BIT},
      </if>
      <if test="actionNote != null">
        #{actionNote,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzx.generator.model.EcsBackActionExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ecs_back_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_back_action
    <set>
      <if test="record.actionId != null">
        action_id = #{record.actionId,jdbcType=INTEGER},
      </if>
      <if test="record.backId != null">
        back_id = #{record.backId,jdbcType=INTEGER},
      </if>
      <if test="record.actionUser != null">
        action_user = #{record.actionUser,jdbcType=VARCHAR},
      </if>
      <if test="record.statusBack != null">
        status_back = #{record.statusBack,jdbcType=BIT},
      </if>
      <if test="record.statusRefund != null">
        status_refund = #{record.statusRefund,jdbcType=BIT},
      </if>
      <if test="record.actionNote != null">
        action_note = #{record.actionNote,jdbcType=VARCHAR},
      </if>
      <if test="record.logTime != null">
        log_time = #{record.logTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_back_action
    set action_id = #{record.actionId,jdbcType=INTEGER},
      back_id = #{record.backId,jdbcType=INTEGER},
      action_user = #{record.actionUser,jdbcType=VARCHAR},
      status_back = #{record.statusBack,jdbcType=BIT},
      status_refund = #{record.statusRefund,jdbcType=BIT},
      action_note = #{record.actionNote,jdbcType=VARCHAR},
      log_time = #{record.logTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzx.generator.model.EcsBackAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_back_action
    <set>
      <if test="backId != null">
        back_id = #{backId,jdbcType=INTEGER},
      </if>
      <if test="actionUser != null">
        action_user = #{actionUser,jdbcType=VARCHAR},
      </if>
      <if test="statusBack != null">
        status_back = #{statusBack,jdbcType=BIT},
      </if>
      <if test="statusRefund != null">
        status_refund = #{statusRefund,jdbcType=BIT},
      </if>
      <if test="actionNote != null">
        action_note = #{actionNote,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        log_time = #{logTime,jdbcType=INTEGER},
      </if>
    </set>
    where action_id = #{actionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzx.generator.model.EcsBackAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_back_action
    set back_id = #{backId,jdbcType=INTEGER},
      action_user = #{actionUser,jdbcType=VARCHAR},
      status_back = #{statusBack,jdbcType=BIT},
      status_refund = #{statusRefund,jdbcType=BIT},
      action_note = #{actionNote,jdbcType=VARCHAR},
      log_time = #{logTime,jdbcType=INTEGER}
    where action_id = #{actionId,jdbcType=INTEGER}
  </update>
</mapper>