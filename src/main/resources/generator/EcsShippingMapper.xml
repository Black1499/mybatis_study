<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzx.generator.dao.EcsShippingMapper">
  <resultMap id="BaseResultMap" type="com.lzx.generator.model.EcsShipping">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="shipping_id" jdbcType="TINYINT" property="shippingId" />
    <result column="shipping_code" jdbcType="VARCHAR" property="shippingCode" />
    <result column="shipping_name" jdbcType="VARCHAR" property="shippingName" />
    <result column="shipping_desc" jdbcType="VARCHAR" property="shippingDesc" />
    <result column="insure" jdbcType="VARCHAR" property="insure" />
    <result column="support_cod" jdbcType="BIT" property="supportCod" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="print_bg" jdbcType="VARCHAR" property="printBg" />
    <result column="print_model" jdbcType="BIT" property="printModel" />
    <result column="shipping_order" jdbcType="TINYINT" property="shippingOrder" />
    <result column="support_pickup" jdbcType="BIT" property="supportPickup" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="is_default_show" jdbcType="BIT" property="isDefaultShow" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lzx.generator.model.EcsShippingWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="shipping_print" jdbcType="LONGVARCHAR" property="shippingPrint" />
    <result column="config_lable" jdbcType="LONGVARCHAR" property="configLable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    shipping_id, shipping_code, shipping_name, shipping_desc, insure, support_cod, enabled, 
    print_bg, print_model, shipping_order, support_pickup, supplier_id, is_default_show
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    shipping_print, config_lable
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lzx.generator.model.EcsShippingExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ecs_shipping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lzx.generator.model.EcsShippingExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ecs_shipping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ecs_shipping
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_shipping
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzx.generator.model.EcsShippingExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_shipping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzx.generator.model.EcsShippingWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ecs_shipping (shipping_id, shipping_code, shipping_name, 
      shipping_desc, insure, support_cod, 
      enabled, print_bg, print_model, 
      shipping_order, support_pickup, supplier_id, 
      is_default_show, shipping_print, config_lable
      )
    values (#{shippingId,jdbcType=TINYINT}, #{shippingCode,jdbcType=VARCHAR}, #{shippingName,jdbcType=VARCHAR}, 
      #{shippingDesc,jdbcType=VARCHAR}, #{insure,jdbcType=VARCHAR}, #{supportCod,jdbcType=BIT}, 
      #{enabled,jdbcType=BIT}, #{printBg,jdbcType=VARCHAR}, #{printModel,jdbcType=BIT}, 
      #{shippingOrder,jdbcType=TINYINT}, #{supportPickup,jdbcType=BIT}, #{supplierId,jdbcType=INTEGER}, 
      #{isDefaultShow,jdbcType=BIT}, #{shippingPrint,jdbcType=LONGVARCHAR}, #{configLable,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lzx.generator.model.EcsShippingWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ecs_shipping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shippingId != null">
        shipping_id,
      </if>
      <if test="shippingCode != null">
        shipping_code,
      </if>
      <if test="shippingName != null">
        shipping_name,
      </if>
      <if test="shippingDesc != null">
        shipping_desc,
      </if>
      <if test="insure != null">
        insure,
      </if>
      <if test="supportCod != null">
        support_cod,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="printBg != null">
        print_bg,
      </if>
      <if test="printModel != null">
        print_model,
      </if>
      <if test="shippingOrder != null">
        shipping_order,
      </if>
      <if test="supportPickup != null">
        support_pickup,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="isDefaultShow != null">
        is_default_show,
      </if>
      <if test="shippingPrint != null">
        shipping_print,
      </if>
      <if test="configLable != null">
        config_lable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shippingId != null">
        #{shippingId,jdbcType=TINYINT},
      </if>
      <if test="shippingCode != null">
        #{shippingCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingName != null">
        #{shippingName,jdbcType=VARCHAR},
      </if>
      <if test="shippingDesc != null">
        #{shippingDesc,jdbcType=VARCHAR},
      </if>
      <if test="insure != null">
        #{insure,jdbcType=VARCHAR},
      </if>
      <if test="supportCod != null">
        #{supportCod,jdbcType=BIT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="printBg != null">
        #{printBg,jdbcType=VARCHAR},
      </if>
      <if test="printModel != null">
        #{printModel,jdbcType=BIT},
      </if>
      <if test="shippingOrder != null">
        #{shippingOrder,jdbcType=TINYINT},
      </if>
      <if test="supportPickup != null">
        #{supportPickup,jdbcType=BIT},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="isDefaultShow != null">
        #{isDefaultShow,jdbcType=BIT},
      </if>
      <if test="shippingPrint != null">
        #{shippingPrint,jdbcType=LONGVARCHAR},
      </if>
      <if test="configLable != null">
        #{configLable,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzx.generator.model.EcsShippingExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ecs_shipping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_shipping
    <set>
      <if test="record.shippingId != null">
        shipping_id = #{record.shippingId,jdbcType=TINYINT},
      </if>
      <if test="record.shippingCode != null">
        shipping_code = #{record.shippingCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingName != null">
        shipping_name = #{record.shippingName,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingDesc != null">
        shipping_desc = #{record.shippingDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.insure != null">
        insure = #{record.insure,jdbcType=VARCHAR},
      </if>
      <if test="record.supportCod != null">
        support_cod = #{record.supportCod,jdbcType=BIT},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.printBg != null">
        print_bg = #{record.printBg,jdbcType=VARCHAR},
      </if>
      <if test="record.printModel != null">
        print_model = #{record.printModel,jdbcType=BIT},
      </if>
      <if test="record.shippingOrder != null">
        shipping_order = #{record.shippingOrder,jdbcType=TINYINT},
      </if>
      <if test="record.supportPickup != null">
        support_pickup = #{record.supportPickup,jdbcType=BIT},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.isDefaultShow != null">
        is_default_show = #{record.isDefaultShow,jdbcType=BIT},
      </if>
      <if test="record.shippingPrint != null">
        shipping_print = #{record.shippingPrint,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.configLable != null">
        config_lable = #{record.configLable,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_shipping
    set shipping_id = #{record.shippingId,jdbcType=TINYINT},
      shipping_code = #{record.shippingCode,jdbcType=VARCHAR},
      shipping_name = #{record.shippingName,jdbcType=VARCHAR},
      shipping_desc = #{record.shippingDesc,jdbcType=VARCHAR},
      insure = #{record.insure,jdbcType=VARCHAR},
      support_cod = #{record.supportCod,jdbcType=BIT},
      enabled = #{record.enabled,jdbcType=BIT},
      print_bg = #{record.printBg,jdbcType=VARCHAR},
      print_model = #{record.printModel,jdbcType=BIT},
      shipping_order = #{record.shippingOrder,jdbcType=TINYINT},
      support_pickup = #{record.supportPickup,jdbcType=BIT},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      is_default_show = #{record.isDefaultShow,jdbcType=BIT},
      shipping_print = #{record.shippingPrint,jdbcType=LONGVARCHAR},
      config_lable = #{record.configLable,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_shipping
    set shipping_id = #{record.shippingId,jdbcType=TINYINT},
      shipping_code = #{record.shippingCode,jdbcType=VARCHAR},
      shipping_name = #{record.shippingName,jdbcType=VARCHAR},
      shipping_desc = #{record.shippingDesc,jdbcType=VARCHAR},
      insure = #{record.insure,jdbcType=VARCHAR},
      support_cod = #{record.supportCod,jdbcType=BIT},
      enabled = #{record.enabled,jdbcType=BIT},
      print_bg = #{record.printBg,jdbcType=VARCHAR},
      print_model = #{record.printModel,jdbcType=BIT},
      shipping_order = #{record.shippingOrder,jdbcType=TINYINT},
      support_pickup = #{record.supportPickup,jdbcType=BIT},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      is_default_show = #{record.isDefaultShow,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzx.generator.model.EcsShippingWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_shipping
    <set>
      <if test="shippingCode != null">
        shipping_code = #{shippingCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingName != null">
        shipping_name = #{shippingName,jdbcType=VARCHAR},
      </if>
      <if test="shippingDesc != null">
        shipping_desc = #{shippingDesc,jdbcType=VARCHAR},
      </if>
      <if test="insure != null">
        insure = #{insure,jdbcType=VARCHAR},
      </if>
      <if test="supportCod != null">
        support_cod = #{supportCod,jdbcType=BIT},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="printBg != null">
        print_bg = #{printBg,jdbcType=VARCHAR},
      </if>
      <if test="printModel != null">
        print_model = #{printModel,jdbcType=BIT},
      </if>
      <if test="shippingOrder != null">
        shipping_order = #{shippingOrder,jdbcType=TINYINT},
      </if>
      <if test="supportPickup != null">
        support_pickup = #{supportPickup,jdbcType=BIT},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="isDefaultShow != null">
        is_default_show = #{isDefaultShow,jdbcType=BIT},
      </if>
      <if test="shippingPrint != null">
        shipping_print = #{shippingPrint,jdbcType=LONGVARCHAR},
      </if>
      <if test="configLable != null">
        config_lable = #{configLable,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lzx.generator.model.EcsShippingWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_shipping
    set shipping_code = #{shippingCode,jdbcType=VARCHAR},
      shipping_name = #{shippingName,jdbcType=VARCHAR},
      shipping_desc = #{shippingDesc,jdbcType=VARCHAR},
      insure = #{insure,jdbcType=VARCHAR},
      support_cod = #{supportCod,jdbcType=BIT},
      enabled = #{enabled,jdbcType=BIT},
      print_bg = #{printBg,jdbcType=VARCHAR},
      print_model = #{printModel,jdbcType=BIT},
      shipping_order = #{shippingOrder,jdbcType=TINYINT},
      support_pickup = #{supportPickup,jdbcType=BIT},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      is_default_show = #{isDefaultShow,jdbcType=BIT},
      shipping_print = #{shippingPrint,jdbcType=LONGVARCHAR},
      config_lable = #{configLable,jdbcType=LONGVARCHAR}
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzx.generator.model.EcsShipping">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_shipping
    set shipping_code = #{shippingCode,jdbcType=VARCHAR},
      shipping_name = #{shippingName,jdbcType=VARCHAR},
      shipping_desc = #{shippingDesc,jdbcType=VARCHAR},
      insure = #{insure,jdbcType=VARCHAR},
      support_cod = #{supportCod,jdbcType=BIT},
      enabled = #{enabled,jdbcType=BIT},
      print_bg = #{printBg,jdbcType=VARCHAR},
      print_model = #{printModel,jdbcType=BIT},
      shipping_order = #{shippingOrder,jdbcType=TINYINT},
      support_pickup = #{supportPickup,jdbcType=BIT},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      is_default_show = #{isDefaultShow,jdbcType=BIT}
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </update>
</mapper>