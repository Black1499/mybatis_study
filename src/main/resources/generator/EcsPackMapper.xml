<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzx.generator.dao.EcsPackMapper">
  <resultMap id="BaseResultMap" type="com.lzx.generator.model.EcsPack">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="pack_id" jdbcType="TINYINT" property="packId" />
    <result column="pack_name" jdbcType="VARCHAR" property="packName" />
    <result column="pack_img" jdbcType="VARCHAR" property="packImg" />
    <result column="pack_fee" jdbcType="DECIMAL" property="packFee" />
    <result column="free_money" jdbcType="SMALLINT" property="freeMoney" />
    <result column="pack_desc" jdbcType="VARCHAR" property="packDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    pack_id, pack_name, pack_img, pack_fee, free_money, pack_desc
  </sql>
  <select id="selectByExample" parameterType="com.lzx.generator.model.EcsPackExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ecs_pack
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ecs_pack
    where pack_id = #{packId,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_pack
    where pack_id = #{packId,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzx.generator.model.EcsPackExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_pack
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzx.generator.model.EcsPack">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ecs_pack (pack_id, pack_name, pack_img, 
      pack_fee, free_money, pack_desc
      )
    values (#{packId,jdbcType=TINYINT}, #{packName,jdbcType=VARCHAR}, #{packImg,jdbcType=VARCHAR}, 
      #{packFee,jdbcType=DECIMAL}, #{freeMoney,jdbcType=SMALLINT}, #{packDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lzx.generator.model.EcsPack">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ecs_pack
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packId != null">
        pack_id,
      </if>
      <if test="packName != null">
        pack_name,
      </if>
      <if test="packImg != null">
        pack_img,
      </if>
      <if test="packFee != null">
        pack_fee,
      </if>
      <if test="freeMoney != null">
        free_money,
      </if>
      <if test="packDesc != null">
        pack_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packId != null">
        #{packId,jdbcType=TINYINT},
      </if>
      <if test="packName != null">
        #{packName,jdbcType=VARCHAR},
      </if>
      <if test="packImg != null">
        #{packImg,jdbcType=VARCHAR},
      </if>
      <if test="packFee != null">
        #{packFee,jdbcType=DECIMAL},
      </if>
      <if test="freeMoney != null">
        #{freeMoney,jdbcType=SMALLINT},
      </if>
      <if test="packDesc != null">
        #{packDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzx.generator.model.EcsPackExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ecs_pack
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_pack
    <set>
      <if test="record.packId != null">
        pack_id = #{record.packId,jdbcType=TINYINT},
      </if>
      <if test="record.packName != null">
        pack_name = #{record.packName,jdbcType=VARCHAR},
      </if>
      <if test="record.packImg != null">
        pack_img = #{record.packImg,jdbcType=VARCHAR},
      </if>
      <if test="record.packFee != null">
        pack_fee = #{record.packFee,jdbcType=DECIMAL},
      </if>
      <if test="record.freeMoney != null">
        free_money = #{record.freeMoney,jdbcType=SMALLINT},
      </if>
      <if test="record.packDesc != null">
        pack_desc = #{record.packDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_pack
    set pack_id = #{record.packId,jdbcType=TINYINT},
      pack_name = #{record.packName,jdbcType=VARCHAR},
      pack_img = #{record.packImg,jdbcType=VARCHAR},
      pack_fee = #{record.packFee,jdbcType=DECIMAL},
      free_money = #{record.freeMoney,jdbcType=SMALLINT},
      pack_desc = #{record.packDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzx.generator.model.EcsPack">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_pack
    <set>
      <if test="packName != null">
        pack_name = #{packName,jdbcType=VARCHAR},
      </if>
      <if test="packImg != null">
        pack_img = #{packImg,jdbcType=VARCHAR},
      </if>
      <if test="packFee != null">
        pack_fee = #{packFee,jdbcType=DECIMAL},
      </if>
      <if test="freeMoney != null">
        free_money = #{freeMoney,jdbcType=SMALLINT},
      </if>
      <if test="packDesc != null">
        pack_desc = #{packDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where pack_id = #{packId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzx.generator.model.EcsPack">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_pack
    set pack_name = #{packName,jdbcType=VARCHAR},
      pack_img = #{packImg,jdbcType=VARCHAR},
      pack_fee = #{packFee,jdbcType=DECIMAL},
      free_money = #{freeMoney,jdbcType=SMALLINT},
      pack_desc = #{packDesc,jdbcType=VARCHAR}
    where pack_id = #{packId,jdbcType=TINYINT}
  </update>
</mapper>