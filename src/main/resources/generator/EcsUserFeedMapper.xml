<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzx.generator.dao.EcsUserFeedMapper">
  <resultMap id="BaseResultMap" type="com.lzx.generator.model.EcsUserFeed">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="feed_id" jdbcType="INTEGER" property="feedId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="value_id" jdbcType="INTEGER" property="valueId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="feed_type" jdbcType="BIT" property="feedType" />
    <result column="is_feed" jdbcType="BIT" property="isFeed" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    feed_id, user_id, value_id, goods_id, feed_type, is_feed
  </sql>
  <select id="selectByExample" parameterType="com.lzx.generator.model.EcsUserFeedExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ecs_user_feed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ecs_user_feed
    where feed_id = #{feedId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_user_feed
    where feed_id = #{feedId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzx.generator.model.EcsUserFeedExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_user_feed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzx.generator.model.EcsUserFeed">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ecs_user_feed (feed_id, user_id, value_id, 
      goods_id, feed_type, is_feed)
    values (#{feedId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{valueId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{feedType,jdbcType=BIT}, #{isFeed,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.lzx.generator.model.EcsUserFeed">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ecs_user_feed
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedId != null">
        feed_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="valueId != null">
        value_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="feedType != null">
        feed_type,
      </if>
      <if test="isFeed != null">
        is_feed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedId != null">
        #{feedId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="valueId != null">
        #{valueId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="feedType != null">
        #{feedType,jdbcType=BIT},
      </if>
      <if test="isFeed != null">
        #{isFeed,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzx.generator.model.EcsUserFeedExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ecs_user_feed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_user_feed
    <set>
      <if test="record.feedId != null">
        feed_id = #{record.feedId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.valueId != null">
        value_id = #{record.valueId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.feedType != null">
        feed_type = #{record.feedType,jdbcType=BIT},
      </if>
      <if test="record.isFeed != null">
        is_feed = #{record.isFeed,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_user_feed
    set feed_id = #{record.feedId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      value_id = #{record.valueId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      feed_type = #{record.feedType,jdbcType=BIT},
      is_feed = #{record.isFeed,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzx.generator.model.EcsUserFeed">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_user_feed
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="valueId != null">
        value_id = #{valueId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="feedType != null">
        feed_type = #{feedType,jdbcType=BIT},
      </if>
      <if test="isFeed != null">
        is_feed = #{isFeed,jdbcType=BIT},
      </if>
    </set>
    where feed_id = #{feedId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzx.generator.model.EcsUserFeed">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_user_feed
    set user_id = #{userId,jdbcType=INTEGER},
      value_id = #{valueId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      feed_type = #{feedType,jdbcType=BIT},
      is_feed = #{isFeed,jdbcType=BIT}
    where feed_id = #{feedId,jdbcType=INTEGER}
  </update>
</mapper>